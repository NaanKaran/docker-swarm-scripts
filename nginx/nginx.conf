worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    sendfile        on;
    keepalive_timeout  65;

    upstream inputapi {
        server input-api:3000;
    }

    upstream builderapi {
        server builderapi-api:8080; 
    }

    upstream responseapi {
        server response-api:8080; 
    }

    upstream masterapi {
        server master-api:8080; 
    }

    upstream form {
        server formbuilder-ui:4200; 
    }
    
    upstream dashboard {
        server dashboard-ui:4200; 
    }


    server {
        listen 80;

        location /inputapi/ {
            rewrite ^/inputapi/(.*)$ /$1 break;
            proxy_pass http://inputapi/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Enable CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';

            # Handle Preflight Requests
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        location /builderapi/ {
            rewrite ^/builderapi/(.*)$ /$1 break;
            proxy_pass http://builderapi/;  # Don't remove path prefix
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Enable CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';

            # Handle Preflight Requests
            if ($request_method = OPTIONS) {
                return 204;
            }
        }
        
        location /responseapi/ {
            rewrite ^/responseapi/(.*)$ /$1 break;
            proxy_pass http://responseapi/;  # Don't remove path prefix
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Enable CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';

            # Handle Preflight Requests
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        location /masterapi/ {
            rewrite ^/masterapi/(.*)$ /$1 break;
            proxy_pass http://masterapi/;  # Don't remove path prefix
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Enable CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';

            # Handle Preflight Requests
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        location /form/ {
            rewrite ^/form/(.*)$ /$1 break;
            proxy_pass http://form/;  # Don't remove path prefix
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /dashboard/ {
            rewrite ^/dashboard/(.*)$ /$1 break;
            proxy_pass http://dashboard/;  # Don't remove path prefix
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

    }
}
